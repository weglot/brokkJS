/*! BrokkJS 2019-02-15 */

!function(r,t,e,n){var a="brokkJS";function i(i,t){this.element=i,this._name=a,this._defaults=r.fn.brokk.defaults;var o={},s=["toUpdateElements","triggerElements","toFireSuccessElements"];r.each(this._defaults,function(t,n){if("function"!=typeof n){var e=t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();"this"===(n=r(i).attr("data-brokk-"+e))&&(n=i),-1!==s.indexOf(t)&&"string"==typeof n&&(n=n.split(",").map(function(t){return"this"===t.trim()?i:t})),"requestParams"===t&&void 0!==n&&(n=JSON.parse(n)),o[t]=n}}),void 0!==o.params&&(o.params=JSON.parse(o.params)),this.options=r.extend({},this._defaults,o),this.options=r.extend({},this.options,t),this.init()}r.extend(i.prototype,{init:function(){this.buildCache(),this.bindEvents()},destroy:function(){this.unbindEvents(),this.$element.removeData()},buildCache:function(){this.$element=r(this.element)},bindEvents:function(){var n=this;switch(this.options.fireEvent){case r.fn.brokk.fireEvents.ON_READY:r(e).ready(function(){n.fire()});break;case r.fn.brokk.fireEvents.ON_CLICK:n.$element.on("click."+n._name,function(){n.fire()});break;case r.fn.brokk.fireEvents.ON_SUBMIT:n.$element.on("submit."+n._name,function(t){r(this)[0].checkValidity()&&(t.preventDefault(),n.fire())})}},unbindEvents:function(){this.$element.off("."+this._name)},callback:function(t,arguments){"function"==typeof t&&t.call(this,arguments)},fire:function(){var n=this;this.callback(this.options.before),r.ajax({url:this.options.requestUrl,type:this.options.requestMethod,dataType:"json",data:this.options.requestParams,success:function(t){n.callback(n.options.onSuccess,{data:t})},error:function(t){n.callback(n.options.onError,{xhr:t})}}).always(function(){n.callback(n.options.onComplete)})},fireSuccessElements:function(arguments){this.options.toFireSuccessElements.forEach(function(t){r(t).data("plugin_"+a)&&r(t).brokkApi().fire()})},before:function(arguments){this.options.triggerElements.forEach(function(t){r(t).prop("disabled",!0),r(t).addClass("disabled")}),this.options.showOverLay&&this.options.toUpdateElements.forEach(function(t){0===r(t).find("#brokk-loading").length&&r(t).append('<span id="brokk-loading">'+r.fn.brokk.loadingTemplate+"</span>")})},onSuccess:function(arguments){this.options.toUpdateElements.forEach(function(t){r(t).html(arguments.data)})},onError:function(arguments){},onComplete:function(arguments){this.options.triggerElements.forEach(function(t){r(t).prop("disabled",!1),r(t).removeClass("disabled")}),this.options.toUpdateElements.forEach(function(t){r(t).find("#brokk-loading").remove()})}}),r.fn.brokk=function(t){return this.each(function(){r.data(this,"plugin_"+a)||r.data(this,"plugin_"+a,new i(this,t))})},r.fn.brokkApi=function(){return r.data(this[0],"plugin_"+a)},r.fn.brokk.loadingTemplate="Loading",r.fn.brokk.fireEvents={ON_READY:"onReady",ON_CLICK:"onClick",ON_SUBMIT:"onSubmit"},r.fn.brokk.defaults={requestUrl:null,requestMethod:"GET",requestParams:null,fireEvent:r.fn.brokk.fireEvents.ON_READY,toUpdateElements:[],triggerElements:[],toFireSuccessElements:[],showOverLay:!0,before:function(arguments){this.before(arguments)},onSuccess:function(arguments){this.onSuccess(arguments)},onError:function(arguments){this.onError(arguments)},onComplete:function(arguments){this.onComplete(arguments)}}}(jQuery,window,document);